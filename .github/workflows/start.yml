name: 'Regtech-Infrastructure'

on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: 'Apply, Plan, or Destroy'
        options:
          - plan
          - apply
          - destroy
        required: true
        default: 'apply'

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  contents: read

jobs:
  CheckOut-Repo:
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  Setting-Up-Terraform:
    runs-on: ubuntu-latest
    needs: CheckOut-Repo

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

  Terraform-Initializing:
    runs-on: ubuntu-latest
    needs: Setting-Up-Terraform

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

  Terraform-Formatting-Validating:
    runs-on: ubuntu-latest
    needs: Terraform-Initializing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -upgrade

      - name: Clear Cache
        run: rm -rf .terraform
        

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

  Terraform-Action:
    runs-on: ubuntu-latest
    needs: Terraform-Formatting-Validating

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan -input=false

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve -input=false

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve -input=false
